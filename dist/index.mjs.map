{"version":3,"file":"index.mjs","sources":["../node_modules/clsx/dist/clsx.mjs","../node_modules/style-inject/dist/style-inject.es.js","../src/components/Treeview/nested/Checkbox/Checkbox.tsx","../public/chevronDown.svg","../public/chevronLeft.svg","../src/components/Treeview/nested/Dropdown/Dropdown.tsx","../src/components/Treeview/nested/Node/Node.tsx","../src/components/Treeview/lib.ts","../public/folderClosed.svg","../public/file.svg","../src/components/Treeview/constants.tsx","../src/components/Treeview/Treeview.tsx"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { FC, memo } from \"react\";\nimport clsx from \"clsx\";\nimport { CheckboxProps } from \"./types\";\n\nimport \"./Checkbox.css\";\n\nconst Checkbox: FC<CheckboxProps> = ({\n  label,\n  onChange,\n  checked,\n  disabled,\n  indeterminate,\n  classNames,\n}) => {\n  return (\n    <div className={clsx(\"checkboxWrap\", classNames.checkbox)}>\n      <input\n        type=\"checkbox\"\n        aria-label={label}\n        className={\n          indeterminate ? clsx(\"indeterminate\", classNames.indeterminate) : \"\"\n        }\n        onChange={onChange}\n        checked={checked}\n        disabled={disabled}\n      />\n      <span className={classNames.label}>{label}</span>\n    </div>\n  );\n};\n\nexport default memo(Checkbox);\n","var img = \"data:image/svg+xml,%3csvg width='9' height='5' viewBox='0 0 9 5' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M1.33333 1.1665L4.66667 4.49984L8 1.1665' stroke='%234C4C4C' stroke-linecap='round' stroke-linejoin='round'/%3e%3c/svg%3e\";\n  export default img;","var img = \"data:image/svg+xml,%3csvg width='5' height='8' viewBox='0 0 5 8' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M1 7.16667L4.33333 3.83333L1 0.5' stroke='%234C4C4C' stroke-linecap='round' stroke-linejoin='round'/%3e%3c/svg%3e\";\n  export default img;","import React, { FC, memo } from \"react\";\nimport clsx from \"clsx\";\nimport { DropdownProps } from \"./types\";\nimport { ReactComponent as OpenIcon } from \"../../../../../public/chevronDown.svg\";\nimport { ReactComponent as CloseIcon } from \"../../../../../public/chevronLeft.svg\";\n\nimport \"./Dropdown.css\";\n\nconst Dropdown: FC<DropdownProps> = ({ open, onClick, className }) => {\n  return (\n    <div className={clsx(\"dropdown\", className)} onClick={onClick}>\n      <div className=\"icon\">{open ? <OpenIcon /> : <CloseIcon />}</div>\n    </div>\n  );\n};\n\nexport default memo(Dropdown);\n","import React, { FC, memo } from \"react\";\nimport clsx from \"clsx\";\nimport Checkbox from \"../Checkbox\";\nimport { NodeProps } from \"./types\";\nimport Dropdown from \"../Dropdown\";\n\nimport \"./Node.css\";\n\nconst Node: FC<NodeProps> = ({\n  data,\n  onlyRead,\n  renderChildren,\n  onToggle,\n  onChange,\n  selected,\n  indeterminate,\n  withIcons,\n  classNames,\n  iconsComponents,\n}) => {\n  const { parentIcon, childIcon } = iconsComponents;\n  const { data: node, children, open, id } = data;\n  const hasChildren = children.length > 0;\n\n  return (\n    <div className={clsx(\"nodeWrap\", classNames.wrap)}>\n      {hasChildren && (\n        <Dropdown\n          onClick={() => onToggle(id)}\n          open={open}\n          className={classNames.dropdown}\n        />\n      )}\n      <div className={clsx(\"node\", classNames.node)}>\n        {onlyRead ? (\n          <div className=\"titleBlock\">\n            {withIcons && (hasChildren ? parentIcon : childIcon)}\n            <span\n              className={clsx(\n                hasChildren || withIcons ? \"\" : \"title\",\n                classNames.label\n              )}>\n              {node.title}\n            </span>\n          </div>\n        ) : (\n          <Checkbox\n            indeterminate={indeterminate}\n            checked={selected}\n            classNames={{\n              ...classNames,\n              checkbox: clsx(classNames.checkbox, hasChildren ? \"\" : \"title\"),\n            }}\n            onChange={() => onChange(data)}\n            label={node.title}\n          />\n        )}\n        {open && hasChildren && <div>{renderChildren(children)}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Node);\n","import { EntityType, NodeData, NodeItem, NodeMap, Value } from \"./types\";\n\n/**\n * Forms a nodes object\n * @param {NodeData[]} nodes - data array\n * @param {Value | null}  parentId - parent element id\n * @param {Value[]} values - chosen values array\n * @returns {NodeMap}\n */\nexport const getNodeMap = (\n  nodes: NodeData[],\n  parentId: Value | null,\n  values: Value[]\n): NodeMap => {\n  return nodes.reduce((map, node) => {\n    const { value, children, id } = node;\n    const open =\n      children?.some((option) => values.includes(option.value)) ||\n      values.includes(value);\n\n    const treeNode: NodeItem = {\n      children:\n        node.children?.map((option) =>\n          option.id ? option.id : option.value\n        ) ?? [],\n      data: node,\n      id: id || value,\n      open,\n      parent: parentId || null,\n    };\n\n    let childrenMap;\n\n    if (children) childrenMap = getNodeMap(children, treeNode.id, values);\n\n    return { ...map, ...childrenMap, [treeNode.id]: treeNode };\n  }, {} as NodeMap);\n};\n\n/**\n * Sets up an array of current node id and its children elements\n * @param {NodeMap} map - a map of all nodes\n * @param {Value}  id - id of current node\n * @returns {Value[]}\n */\nexport const getNodeValues = (map: NodeMap, id: Value): Value[] => {\n  const { children, data } = map[id];\n\n  return [\n    data.value,\n    ...children.reduce(\n      (values, id) => [...values, ...getNodeValues(map, id)],\n      [] as Value[]\n    ),\n  ];\n};\n\n/**\n * Sets up an array of unique values\n * @param {EntityType[]} arr - an array of chosen non-unique values\n * @returns {EntityType[]}\n */\nexport const getUniqueValues = (arr: EntityType[]): EntityType[] => {\n  return [\n    ...new Set(\n      arr.map((item) => {\n        const sortedObjectKeys = Object.keys(item).sort();\n        const obj = Object.assign(\n          {},\n          ...sortedObjectKeys.map((i) => ({\n            [i]: item[i as keyof typeof item],\n          }))\n        );\n        return JSON.stringify(obj);\n      })\n    ),\n  ].map((s) => JSON.parse(s));\n};\n\n/**\n *  Recursively flattens a tree structure into a single array of children nodes\n * @param {NodeData} data - a tree value\n * @returns {EntityType[]}\n */\nexport const flattenTree = (data: NodeData): EntityType[] => {\n  if (!data) return [];\n\n  let result: EntityType[] = [];\n\n  if (data.children) {\n    data.children.forEach((child) => {\n      result.push({ id: child.value, name: child.title });\n      result = result.concat(flattenTree(child));\n    });\n  }\n\n  return result;\n};\n\n/**\n *  Recursively checks if any descendant is selected\n * @param {NodeData} node - a tree node\n * @param {Value[]} selected - an array of selected values\n * @returns {boolean}\n */\nexport const hasSelectedDescendants = (\n  node: NodeData,\n  selected: Value[]\n): boolean => {\n  if (!node.children) return false;\n\n  return node.children.some(\n    (child) =>\n      selected.includes(child.value) || hasSelectedDescendants(child, selected)\n  );\n};\n","var img = \"data:image/svg+xml,%3csvg width='18' height='15' viewBox='0 0 18 15' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M5.83887 0.5C6.45033 0.500135 7.02862 0.760309 7.39551 1.2002L8.39648 2.40039C8.42232 2.43124 8.45573 2.45635 8.49414 2.47363C8.53262 2.49093 8.57515 2.49994 8.61816 2.5H16C17.1046 2.5 18 3.39543 18 4.5V12.5C18 13.6046 17.1046 14.5 16 14.5H1.94629C1.43019 14.5 0.935273 14.3154 0.570312 13.9873C0.205342 13.6591 0 13.2141 0 12.75V2.25C0 1.786 0.260645 1.24686 0.514648 1C0.768622 0.753167 1.0292 0.5 1.94629 0.5H5.83887Z' fill='%234C4C4C'/%3e%3c/svg%3e\";\n  export default img;","var img = \"data:image/svg+xml,%3csvg width='13' height='17' viewBox='0 0 13 17' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M7.35059 0.510593C7.45483 0.531388 7.5515 0.582528 7.62777 0.658898L12.8413 5.87924C12.9429 5.98095 13 6.11887 13 6.26271V14.4661C13 15.0055 12.7864 15.5232 12.4054 15.9047C12.0245 16.2861 11.5075 16.5 10.9688 16.5H2.03125C1.49253 16.5 0.975497 16.2861 0.594564 15.9047C0.213631 15.5232 0 15.0055 0 14.4661V2.5339C0 1.99448 0.21363 1.47677 0.594564 1.09534C0.975497 0.713909 1.49253 0.5 2.03125 0.5H7.24479L7.35059 0.510593ZM2.03125 1.58475C1.77985 1.58475 1.53828 1.68429 1.36051 1.86229C1.18275 2.04029 1.08333 2.28217 1.08333 2.5339V14.4661C1.08333 14.7178 1.18275 14.9597 1.36051 15.1377C1.53828 15.3157 1.77985 15.4153 2.03125 15.4153H10.9688C11.2202 15.4153 11.4617 15.3157 11.6395 15.1377C11.8173 14.9597 11.9167 14.7178 11.9167 14.4661V9.04237H7.04167C6.74251 9.04237 6.5 8.79954 6.5 8.5V1.58475H2.03125ZM7.58333 7.95763H11.9167V6.48729L7.58333 2.14831V7.95763Z' fill='%234C4C4C'/%3e%3c/svg%3e\";\n  export default img;","import React from \"react\";\nimport clsx from \"clsx\";\nimport { IconComponents } from \"./types\";\nimport { ReactComponent as Folder } from \"../../../public/folderClosed.svg\";\nimport { ReactComponent as File } from \"../../../public/file.svg\";\n\nexport const DEFAULT_COMPONENTS: IconComponents = {\n  parentIcon: (\n    <div className=\"folderIcon\">\n      <Folder />\n    </div>\n  ),\n  childIcon: (\n    <div className={clsx(\"folderIcon\", \"title\")}>\n      <File />\n    </div>\n  ),\n};\n","import React, {\n  FC,\n  memo,\n  useCallback,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { EntityType, NodeItem, NodeMap, TreeviewProps, Value } from \"./types\";\nimport Node from \"./nested/Node\";\nimport {\n  flattenTree,\n  getNodeMap,\n  getNodeValues,\n  getUniqueValues,\n  hasSelectedDescendants,\n} from \"./lib\";\nimport { DEFAULT_COMPONENTS } from \"./constants\";\n\nimport \"./Treeview.css\";\n\nconst Treeview: FC<TreeviewProps> = ({\n  data,\n  onChange,\n  value = [],\n  classNames = {},\n  onlyRead = true,\n  withIcons = false,\n  iconsComponents = DEFAULT_COMPONENTS,\n}) => {\n  const [nodeMap, setNodeMap] = useState<NodeMap>({});\n\n  const selected = useMemo(() => {\n    return value.map((i) => i.id);\n  }, [value]);\n\n  useLayoutEffect(() => {\n    setNodeMap(getNodeMap(data, null, selected));\n  }, []);\n\n  const roots = useMemo(() => {\n    return Object.keys(nodeMap).filter((key) => nodeMap[key].parent === null);\n  }, [nodeMap]);\n\n  const onToggle = useCallback(\n    (id: Value): void => {\n      const newNode = { ...nodeMap[id], open: !nodeMap[id].open };\n\n      setNodeMap({ ...nodeMap, [id]: newNode });\n    },\n    [nodeMap]\n  );\n\n  const handleChange = useCallback(\n    (node: NodeItem): void => {\n      if (!onChange) return;\n\n      const { data, children, parent, id } = node;\n\n      let ids = [data.value];\n      let returnValue: EntityType[] = [{ id: data.value, name: data.title }];\n\n      if (children) {\n        ids = getNodeValues(nodeMap, id);\n      }\n\n      const childrenItems = flattenTree(data);\n\n      returnValue = childrenItems\n        ? [...childrenItems, { id: data.value, name: data.title }]\n        : [{ id: data.value, name: data.title }];\n\n      const newValue = selected.includes(data.value)\n        ? value.filter((item) => !ids.includes(item.id) && item.id !== parent)\n        : getUniqueValues([...value, ...returnValue]);\n\n      if (parent) {\n        const parentNode = nodeMap[parent];\n        const newValueIds = newValue.map((val) => val.id);\n        const allChildrenSelected = parentNode.data.children?.every((child) =>\n          newValueIds.includes(child.value)\n        );\n        if (allChildrenSelected) {\n          returnValue = [\n            { id: parentNode.data.value, name: parentNode.data.title },\n          ];\n          onChange([...newValue, ...returnValue]);\n        } else {\n          onChange(newValue);\n        }\n      } else {\n        onChange(newValue);\n      }\n    },\n    [value, nodeMap]\n  );\n\n  const renderNode = (id: Value) => {\n    const node = nodeMap[id];\n    const { data } = node;\n    const isSelected = selected.includes(data.value);\n    const isIndeterminate = hasSelectedDescendants(data, selected);\n\n    return (\n      <Node\n        key={id}\n        data={node}\n        classNames={classNames}\n        onlyRead={onlyRead}\n        withIcons={withIcons}\n        iconsComponents={iconsComponents}\n        renderChildren={(ids) => ids.map(renderNode)}\n        onToggle={onToggle}\n        onChange={handleChange}\n        selected={isSelected}\n        indeterminate={!isSelected && isIndeterminate}\n      />\n    );\n  };\n\n  return <div className=\"wrap\">{roots.map(renderNode)}</div>;\n};\n\nexport default memo(Treeview);\n"],"names":["r","e","t","f","n","Array","isArray","o","length","clsx","arguments","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","_path","Checkbox$1","memo","label","onChange","checked","disabled","indeterminate","classNames","_jsxs","className","checkbox","children","_jsx","_extends","Object","assign","bind","hasOwnProperty","call","apply","SvgChevronDown","props","React","xmlns","width","height","fill","stroke","strokeLinecap","strokeLinejoin","d","SvgChevronLeft","Dropdown$1","open","onClick","OpenIcon","CloseIcon","Node$1","data","onlyRead","renderChildren","onToggle","selected","withIcons","iconsComponents","parentIcon","childIcon","node","id","hasChildren","wrap","Dropdown","dropdown","title","Checkbox","getNodeMap","nodes","parentId","values","reduce","map","value","some","option","includes","treeNode","_b","_a","parent","childrenMap","getNodeValues","flattenTree","result","forEach","child","push","name","concat","hasSelectedDescendants","DEFAULT_COMPONENTS","fillRule","clipRule","Treeview$1","nodeMap","setNodeMap","useState","useMemo","i","useLayoutEffect","roots","keys","filter","key","useCallback","newNode","handleChange","ids","returnValue","childrenItems","newValue","item","arr","Set","sortedObjectKeys","sort","obj","JSON","stringify","s","parse","parentNode","newValueIds","val","every","renderNode","isSelected","isIndeterminate","Node"],"mappings":"wKAAA,SAASA,EAAEC,GAAG,IAAIC,EAAEC,EAAEC,EAAE,GAAG,GAAG,iBAAiBH,GAAG,iBAAiBA,EAAEG,GAAGH,OAAO,GAAG,iBAAiBA,EAAE,GAAGI,MAAMC,QAAQL,GAAG,CAAC,IAAIM,EAAEN,EAAEO,OAAO,IAAIN,EAAE,EAAEA,EAAEK,EAAEL,IAAID,EAAEC,KAAKC,EAAEH,EAAEC,EAAEC,OAAOE,IAAIA,GAAG,KAAKA,GAAGD,EAAE,MAAM,IAAIA,KAAKF,EAAEA,EAAEE,KAAKC,IAAIA,GAAG,KAAKA,GAAGD,GAAG,OAAOC,CAAC,CAAQ,SAASK,IAAO,IAAI,IAAIR,EAAEC,EAAEC,EAAE,EAAEC,EAAE,GAAGG,EAAEG,UAAUF,OAAOL,EAAEI,EAAEJ,KAAKF,EAAES,UAAUP,MAAMD,EAAEF,EAAEC,MAAMG,IAAIA,GAAG,KAAKA,GAAGF,GAAG,OAAOE,CAAC,CCA/W,SAASO,EAAYC,EAAKC,QACX,IAARA,IAAiBA,EAAM,CAAA,GAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,GAnBW,CAqBzD,y7BCMA,IC/BIe,ED+BJC,EAAeC,GAzBqB,EAClCC,QACAC,WACAC,UACAC,WACAC,gBACAC,gBAGEC,EAAA,MAAA,CAAKC,UAAW5B,EAAK,eAAgB0B,EAAWG,UAASC,SAAA,CACvDC,EAAA,QAAA,CACEpB,KAAK,WAAU,aACHU,EACZO,UACEH,EAAgBzB,EAAK,gBAAiB0B,EAAWD,eAAiB,GAEpEH,SAAUA,EACVC,QAASA,EACTC,SAAUA,IAEZO,EAAA,OAAA,CAAMH,UAAWF,EAAWL,MAAKS,SAAGT,SCzB1C,SAASW,IAAa,OAAOA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUxC,GAAK,IAAK,IAAIH,EAAI,EAAGA,EAAIS,UAAUF,OAAQP,IAAK,CAAE,IAAIC,EAAIQ,UAAUT,GAAI,IAAK,IAAID,KAAKE,GAAG,CAAG,GAAE2C,eAAeC,KAAK5C,EAAGF,KAAOI,EAAEJ,GAAKE,EAAEF,GAAK,CAAE,OAAOI,CAAG,EAAGqC,EAASM,MAAM,KAAMrC,UAAY,CAEnR,ICHIiB,EDGAqB,EAAiB,SAAwBC,GAC3C,OAAoBC,EAAM/B,cAAc,MAAOsB,EAAS,CACtDU,MAAO,6BACPC,MAAO,EACPC,OAAQ,EACRC,KAAM,QACLL,GAAQtB,IAAUA,EAAqBuB,EAAM/B,cAAc,OAAQ,CACpEoC,OAAQ,UACRC,cAAe,QACfC,eAAgB,QAChBC,EAAG,oCAEP,ECdA,SAASjB,IAAa,OAAOA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUxC,GAAK,IAAK,IAAIH,EAAI,EAAGA,EAAIS,UAAUF,OAAQP,IAAK,CAAE,IAAIC,EAAIQ,UAAUT,GAAI,IAAK,IAAID,KAAKE,GAAG,CAAG,GAAE2C,eAAeC,KAAK5C,EAAGF,KAAOI,EAAEJ,GAAKE,EAAEF,GAAK,CAAE,OAAOI,CAAG,EAAGqC,EAASM,MAAM,KAAMrC,UAAY,CAEnR,IAAIiD,EAAiB,SAAwBV,GAC3C,OAAoBC,EAAM/B,cAAc,MAAOsB,EAAS,CACtDU,MAAO,6BACPC,MAAO,EACPC,OAAQ,EACRC,KAAM,QACLL,GAAQtB,IAAUA,EAAqBuB,EAAM/B,cAAc,OAAQ,CACpEoC,OAAQ,UACRC,cAAe,QACfC,eAAgB,QAChBC,EAAG,+BAEP,+FCCA,IAAAE,EAAe/B,GARqB,EAAGgC,OAAMC,UAASzB,eAElDG,EAAA,MAAA,CAAKH,UAAW5B,EAAK,WAAY4B,GAAYyB,QAASA,EAAOvB,SAC3DC,SAAKH,UAAU,OAAME,SAASC,EAAPqB,EAAQE,EAAeC,EAAP,gUCoD7C,IAAAC,EAAepC,GAvDa,EAC1BqC,OACAC,WACAC,iBACAC,WACAtC,WACAuC,WACApC,gBACAqC,YACApC,aACAqC,sBAEA,MAAMC,WAAEA,EAAUC,UAAEA,GAAcF,GAC1BN,KAAMS,EAAIpC,SAAEA,EAAQsB,KAAEA,EAAIe,GAAEA,GAAOV,EACrCW,EAActC,EAAS/B,OAAS,EAEtC,OACE4B,EAAA,MAAA,CAAKC,UAAW5B,EAAK,WAAY0B,EAAW2C,MAAKvC,SAAA,CAC9CsC,GACCrC,EAACuC,EAAQ,CACPjB,QAAS,IAAMO,EAASO,GACxBf,KAAMA,EACNxB,UAAWF,EAAW6C,WAG1B5C,EAAA,MAAA,CAAKC,UAAW5B,EAAK,OAAQ0B,EAAWwC,MAAKpC,SAAA,CAC1C4B,EACC/B,SAAKC,UAAU,aAAYE,SAAA,CACxBgC,IAAcM,EAAcJ,EAAaC,GAC1ClC,EAAA,OAAA,CACEH,UAAW5B,EACToE,GAAeN,EAAY,GAAK,QAChCpC,EAAWL,OACZS,SACAoC,EAAKM,WAIVzC,EAAC0C,GACChD,cAAeA,EACfF,QAASsC,EACTnC,WAAUO,OAAAC,OAAAD,OAAAC,OAAA,CAAA,EACLR,GAAU,CACbG,SAAU7B,EAAK0B,EAAWG,SAAUuC,EAAc,GAAK,WAEzD9C,SAAU,IAAMA,EAASmC,GACzBpC,MAAO6C,EAAKM,QAGfpB,GAAQgB,GAAerC,EAAA,MAAA,CAAAD,SAAM6B,EAAe7B,UAE3C,IClDH,MAAM4C,EAAa,CACxBC,EACAC,EACAC,IAEOF,EAAMG,QAAO,CAACC,EAAKb,aACxB,MAAMc,MAAEA,EAAKlD,SAAEA,EAAQqC,GAAEA,GAAOD,EAC1Bd,GACJtB,aAAQ,EAARA,EAAUmD,MAAMC,GAAWL,EAAOM,SAASD,EAAOF,WAClDH,EAAOM,SAASH,GAEZI,EAAqB,CACzBtD,iBACEuD,EAAa,QAAbC,EAAApB,EAAKpC,gBAAQ,IAAAwD,OAAA,EAAAA,EAAEP,KAAKG,GAClBA,EAAOf,GAAKe,EAAOf,GAAKe,EAAOF,uBAC5B,GACPvB,KAAMS,EACNC,GAAIA,GAAMa,EACV5B,OACAmC,OAAQX,GAAY,MAGtB,IAAIY,EAIJ,OAFI1D,IAAU0D,EAAcd,EAAW5C,EAAUsD,EAASjB,GAAIU,IAE9D5C,OAAAC,OAAAD,OAAAC,OAAAD,OAAAC,OAAA,CAAA,EAAY6C,GAAQS,GAAW,CAAE,CAACJ,EAASjB,IAAKiB,GAAQ,GACvD,CAAA,GASQK,EAAgB,CAACV,EAAcZ,KAC1C,MAAMrC,SAAEA,EAAQ2B,KAAEA,GAASsB,EAAIZ,GAE/B,MAAO,CACLV,EAAKuB,SACFlD,EAASgD,QACV,CAACD,EAAQV,IAAO,IAAIU,KAAWY,EAAcV,EAAKZ,KAClD,IAEH,EA8BUuB,EAAejC,IAC1B,IAAKA,EAAM,MAAO,GAElB,IAAIkC,EAAuB,GAS3B,OAPIlC,EAAK3B,UACP2B,EAAK3B,SAAS8D,SAASC,IACrBF,EAAOG,KAAK,CAAE3B,GAAI0B,EAAMb,MAAOe,KAAMF,EAAMrB,QAC3CmB,EAASA,EAAOK,OAAON,EAAYG,GAAO,IAIvCF,CAAM,EASFM,EAAyB,CACpC/B,EACAL,MAEKK,EAAKpC,UAEHoC,EAAKpC,SAASmD,MAClBY,GACChC,EAASsB,SAASU,EAAMb,QAAUiB,EAAuBJ,EAAOhC,KCjHtE,IAAI3C,EACJ,SAASc,IAAa,OAAOA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUxC,GAAK,IAAK,IAAIH,EAAI,EAAGA,EAAIS,UAAUF,OAAQP,IAAK,CAAE,IAAIC,EAAIQ,UAAUT,GAAI,IAAK,IAAID,KAAKE,GAAG,CAAG,GAAE2C,eAAeC,KAAK5C,EAAGF,KAAOI,EAAEJ,GAAKE,EAAEF,GAAK,CAAE,OAAOI,CAAG,EAAGqC,EAASM,MAAM,KAAMrC,UAAY,CAEnR,ICHIiB,EACJ,SAASc,IAAa,OAAOA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUxC,GAAK,IAAK,IAAIH,EAAI,EAAGA,EAAIS,UAAUF,OAAQP,IAAK,CAAE,IAAIC,EAAIQ,UAAUT,GAAI,IAAK,IAAID,KAAKE,GAAG,CAAG,GAAE2C,eAAeC,KAAK5C,EAAGF,KAAOI,EAAEJ,GAAKE,EAAEF,GAAK,CAAE,OAAOI,CAAG,EAAGqC,EAASM,MAAM,KAAMrC,UAAY,CCK5Q,MAAMiG,EAAqC,CAChDlC,WACEjC,EAAA,MAAA,CAAKH,UAAU,aAAYE,SACzBC,GFNgB,SAAyBS,GAC7C,OAAoBC,EAAM/B,cAAc,MAAOsB,EAAS,CACtDU,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,KAAM,QACLL,GAAQtB,IAAUA,EAAqBuB,EAAM/B,cAAc,OAAQ,CACpEmC,KAAM,UACNI,EAAG,+NAEP,GEJa,CAAA,KAGXgB,UACElC,EAAA,MAAA,CAAKH,UAAW5B,EAAK,aAAc,SAAQ8B,SACzCC,GDXQ,SAAiBS,GAC7B,OAAoBC,EAAM/B,cAAc,MAAOsB,EAAS,CACtDU,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,KAAM,QACLL,GAAQtB,IAAUA,EAAqBuB,EAAM/B,cAAc,OAAQ,CACpEmC,KAAM,UACNsD,SAAU,UACVlD,EAAG,mVACHmD,SAAU,aAEd,GCDW,CAAA,oiDC6GX,IAAAC,EAAejF,GAtGqB,EAClCqC,OACAnC,WACA0D,QAAQ,GACRtD,aAAa,CAAA,EACbgC,YAAW,EACXI,aAAY,EACZC,kBAAkBmC,MAElB,MAAOI,EAASC,GAAcC,EAAkB,CAAA,GAE1C3C,EAAW4C,GAAQ,IAChBzB,EAAMD,KAAK2B,GAAMA,EAAEvC,MACzB,CAACa,IAEJ2B,GAAgB,KACdJ,EAAW7B,EAAWjB,EAAM,KAAMI,GAAU,GAC3C,IAEH,MAAM+C,EAAQH,GAAQ,IACbxE,OAAO4E,KAAKP,GAASQ,QAAQC,GAAgC,OAAxBT,EAAQS,GAAKxB,UACxD,CAACe,IAEE1C,EAAWoD,GACd7C,IACC,MAAM8C,EAAOhF,OAAAC,OAAAD,OAAAC,OAAA,CAAA,EAAQoE,EAAQnC,IAAG,CAAEf,MAAOkD,EAAQnC,GAAIf,OAErDmD,EAAUtE,OAAAC,OAAAD,OAAAC,OAAA,CAAA,EAAMoE,GAAO,CAAEnC,CAACA,GAAK8C,IAAU,GAE3C,CAACX,IAGGY,EAAeF,GAClB9C,UACC,IAAK5C,EAAU,OAEf,MAAMmC,KAAEA,EAAI3B,SAAEA,EAAQyD,OAAEA,EAAMpB,GAAEA,GAAOD,EAEvC,IAAIiD,EAAM,CAAC1D,EAAKuB,OACZoC,EAA4B,CAAC,CAAEjD,GAAIV,EAAKuB,MAAOe,KAAMtC,EAAKe,QAE1D1C,IACFqF,EAAM1B,EAAca,EAASnC,IAG/B,MAAMkD,EAAgB3B,EAAYjC,GAElC2D,EAAcC,EACV,IAAIA,EAAe,CAAElD,GAAIV,EAAKuB,MAAOe,KAAMtC,EAAKe,QAChD,CAAC,CAAEL,GAAIV,EAAKuB,MAAOe,KAAMtC,EAAKe,QAElC,MAAM8C,EAAWzD,EAASsB,SAAS1B,EAAKuB,OACpCA,EAAM8B,QAAQS,IAAUJ,EAAIhC,SAASoC,EAAKpD,KAAOoD,EAAKpD,KAAOoB,KJXvCiC,EIYN,IAAIxC,KAAUoC,GJX/B,IACF,IAAIK,IACLD,EAAIzC,KAAKwC,IACP,MAAMG,EAAmBzF,OAAO4E,KAAKU,GAAMI,OACrCC,EAAM3F,OAAOC,OACjB,CAAA,KACGwF,EAAiB3C,KAAK2B,IAAC,CACxBA,CAACA,GAAIa,EAAKb,QAGd,OAAOmB,KAAKC,UAAUF,EAAI,MAG9B7C,KAAKgD,GAAMF,KAAKG,MAAMD,MAdK,IAACP,EIc1B,GAAIjC,EAAQ,CACV,MAAM0C,EAAa3B,EAAQf,GACrB2C,EAAcZ,EAASvC,KAAKoD,GAAQA,EAAIhE,MACM,QAAxBmB,EAAA2C,EAAWxE,KAAK3B,gBAAQ,IAAAwD,OAAA,EAAAA,EAAE8C,OAAOvC,GAC3DqC,EAAY/C,SAASU,EAAMb,WAG3BoC,EAAc,CACZ,CAAEjD,GAAI8D,EAAWxE,KAAKuB,MAAOe,KAAMkC,EAAWxE,KAAKe,QAErDlD,EAAS,IAAIgG,KAAaF,KAE1B9F,EAASgG,EAEb,MACEhG,EAASgG,EACX,GAEF,CAACtC,EAAOsB,IAGJ+B,EAAclE,IAClB,MAAMD,EAAOoC,EAAQnC,IACfV,KAAEA,GAASS,EACXoE,EAAazE,EAASsB,SAAS1B,EAAKuB,OACpCuD,EAAkBtC,EAAuBxC,EAAMI,GAErD,OACE9B,EAACyG,EAAI,CAEH/E,KAAMS,EACNxC,WAAYA,EACZgC,SAAUA,EACVI,UAAWA,EACXC,gBAAiBA,EACjBJ,eAAiBwD,GAAQA,EAAIpC,IAAIsD,GACjCzE,SAAUA,EACVtC,SAAU4F,EACVrD,SAAUyE,EACV7G,eAAgB6G,GAAcC,GAVzBpE,EAWL,EAIN,OAAOpC,EAAA,MAAA,CAAKH,UAAU,OAAME,SAAE8E,EAAM7B,IAAIsD,IAAkB","x_google_ignoreList":[0,1]}